{"version":3,"sources":["Die.js","Dice.js","RuleRow.js","Rules.js","ScoreTable.js","Game.js","App.js","registerServiceWorker.js","index.js"],"names":["Die","_this$props","this","props","numberWords","locked","val","handleClick","idx","rolling","classes","concat","react_default","a","createElement","className","onClick","Component","defaultProps","Dice","_this","dice","map","d","src_Die_0","key","RuleRow","score","name","doScore","description","disabled","undefined","Rule","params","Object","classCallCheck","assign","reduce","prev","curr","freqs","Map","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","value","set","get","err","return","Array","from","values","filter","length","TotalOneNumber","evalRoll","count","SumDistro","_this2","freq","some","c","sum","FullHouse","_this3","includes","SmallStraight","Set","has","_this4","LargeStraight","size","_this5","Yahtzee","_this6","ones","twos","threes","fours","fives","sixes","threeOfKind","fourOfKind","fullHouse","smallStraight","largeStraight","yahtzee","chance","ScoreTable","scores","totalScore","cellSpacing","src_RuleRow_0","evt","getTotalScore","NUM_DICE","NUM_ROLLS","Game","possibleConstructorReturn","getPrototypeOf","call","state","fill","rollsLeft","roll","bind","assertThisInitialized","toggleLocked","animateRoll","setState","setTimeout","st","i","Math","ceil","random","toConsumableArray","slice","rulename","ruleFn","objectSpread","defineProperty","src_Dice_0","every","x","displayRollInfo","src_ScoreTable_0","App","src_Game_0","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.e3a8847e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Die.css\";\n\nclass Die extends Component {\n  static defaultProps = {\n    numberWords: [\"one\", \"two\", \"three\", \"four\", \"five\", \"six\"],\n    val: 1\n  };\n  render() {\n    const { numberWords, locked, val, handleClick, idx, rolling } = this.props;\n    let classes = `Die fas fa-dice-${numberWords[val - 1]} fa-5x `;\n\n    if (locked) classes += \"Die-locked \";\n    if (rolling) classes += \"Die-rolling\";\n    return <i className={classes} onClick={() => handleClick(idx)} />;\n  }\n}\n\nexport default Die;\n","import React, { Component } from \"react\";\nimport Die from \"./Die\";\nimport \"./Dice.css\";\n\nclass Dice extends Component {\n  render() {\n    return (\n      <div className=\"Dice\">\n        {this.props.dice.map((d, idx) => (\n          <Die\n            handleClick={this.props.handleClick}\n            val={d}\n            locked={this.props.locked[idx]}\n            idx={idx}\n            key={idx}\n            rolling={this.props.rolling && !this.props.locked[idx]}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Dice;\n","import React, { Component } from \"react\";\nimport \"./RuleRow.css\";\n\nclass RuleRow extends Component {\n  render() {\n    const { score, name, doScore, description } = this.props;\n    const disabled = this.props.score !== undefined;\n    return (\n      <tr\n        className={`RuleRow RuleRow-${disabled ? \"disabled\" : \"active\"}`}\n        onClick={disabled ? null : doScore}\n      >\n        <td className=\"RuleRow-name\">{name}</td>\n        <td className=\"RuleRow-score\">{disabled ? score : description}</td>\n      </tr>\n    );\n  }\n}\n\nexport default RuleRow;\n","/** Rule for Yahtzee scoring.\n *\n * This is an \"abstract class\"; the real rules are subclasses of these.\n * This stores all parameters passed into it as properties on the instance\n * (to simplify child classes so they don't need constructors of their own).\n *\n * It contains useful functions for summing, counting values, and counting\n * frequencies of dice. These are used by subclassed rules.\n */\n\nclass Rule {\n  constructor(params) {\n    // put all properties in params on instance\n    Object.assign(this, params);\n  }\n\n  sum(dice) {\n    // sum of all dice\n    return dice.reduce((prev, curr) => prev + curr);\n  }\n\n  freq(dice) {\n    // frequencies of dice values\n    const freqs = new Map();\n    for (let d of dice) freqs.set(d, (freqs.get(d) || 0) + 1);\n    return Array.from(freqs.values());\n  }\n\n  count(dice, val) {\n    // # times val appears in dice\n    return dice.filter(d => d === val).length;\n  }\n}\n\n/** Given a sought-for val, return sum of dice of that val.\n *\n * Used for rules like \"sum of all ones\"\n */\n\nclass TotalOneNumber extends Rule {\n  evalRoll = dice => {\n    return this.val * this.count(dice, this.val);\n  };\n}\n\n/** Given a required # of same dice, return sum of all dice.\n *\n * Used for rules like \"sum of all dice when there is a 3-of-kind\"\n */\n\nclass SumDistro extends Rule {\n  evalRoll = dice => {\n    // do any of the counts meet of exceed this distro?\n    return this.freq(dice).some(c => c >= this.count) ? this.sum(dice) : 0;\n  };\n}\n\n/** Check if full house (3-of-kind and 2-of-kind) */\n\nclass FullHouse extends Rule {\n  evalRoll = dice => {\n    const freqs = this.freq(dice);\n    return freqs.includes(2) && freqs.includes(3) ? this.score : 0;\n  };\n}\n\n/** Check for small straights. */\n\nclass SmallStraight extends Rule {\n  evalRoll = dice => {\n    const d = new Set(dice);\n    if (d.has(2) && d.has(3) && d.has(4) && (d.has(1) || d.has(5)))\n      return this.score;\n\n    if (d.has(3) && d.has(4) && d.has(5) && (d.has(2) || d.has(6)))\n      return this.score;\n    return 0;\n  };\n}\n\n/** Check for large straights. */\n\nclass LargeStraight extends Rule {\n  evalRoll = dice => {\n    const d = new Set(dice);\n\n    // large straight must be 5 different dice & only one can be a 1 or a 6\n    return d.size === 5 && (!d.has(1) || !d.has(6)) ? this.score : 0;\n  };\n}\n\n/** Check if all dice are same. */\n\nclass Yahtzee extends Rule {\n  evalRoll = dice => {\n    // all dice must be the same\n    return this.freq(dice)[0] === 5 ? this.score : 0;\n  };\n}\n\n// ones, twos, etc score as sum of that value\nconst ones = new TotalOneNumber({ val: 1, description: \"1 point per 1\" });\nconst twos = new TotalOneNumber({ val: 2, description: \"2 points per 2\" });\nconst threes = new TotalOneNumber({ val: 3, description: \"3 points per 3\" });\nconst fours = new TotalOneNumber({ val: 4, description: \"4 points per 4\" });\nconst fives = new TotalOneNumber({ val: 5, description: \"5 points per 5\" });\nconst sixes = new TotalOneNumber({ val: 6, description: \"6 points per 6\" });\n\n// three/four of kind score as sum of all dice\nconst threeOfKind = new SumDistro({\n  count: 3,\n  description: \"Sum all dice if 3 are the same\"\n});\nconst fourOfKind = new SumDistro({\n  count: 4,\n  description: \"Sum all dice if 4 are the same\"\n});\n\n// full house scores as flat 25\nconst fullHouse = new FullHouse({\n  score: 25,\n  description: \"25 points for a full house\"\n});\n\n// small/large straights score as 30/40\nconst smallStraight = new SmallStraight({\n  score: 30,\n  description: \"30 points for a small straight\"\n});\nconst largeStraight = new LargeStraight({\n  score: 40,\n  description: \"40 points for a large straight\"\n});\n\n// yahtzee scores as 50\nconst yahtzee = new Yahtzee({\n  score: 50,\n  description: \"50 points for yahtzee\"\n});\n\n// for chance, can view as some of all dice, requiring at least 0 of a kind\nconst chance = new SumDistro({ count: 0, description: \"Sum of all dice\" });\n\nexport {\n  ones,\n  twos,\n  threes,\n  fours,\n  fives,\n  sixes,\n  threeOfKind,\n  fourOfKind,\n  fullHouse,\n  smallStraight,\n  largeStraight,\n  yahtzee,\n  chance\n};\n","import React, { Component } from \"react\";\nimport RuleRow from \"./RuleRow\";\nimport \"./ScoreTable.css\";\nimport {\n  ones,\n  twos,\n  threes,\n  fours,\n  fives,\n  sixes,\n  threeOfKind,\n  fourOfKind,\n  fullHouse,\n  smallStraight,\n  largeStraight,\n  yahtzee,\n  chance\n} from \"./Rules\";\n\nclass ScoreTable extends Component {\n  getTotalScore() {\n    const { scores } = this.props;\n    let totalScore = 0;\n    for (let key in scores) {\n      if (scores[key]) totalScore += scores[key];\n    }\n    return totalScore;\n  }\n\n  render() {\n    const { scores, doScore } = this.props;\n\n    return (\n      <div className=\"ScoreTable\">\n        <section className=\"ScoreTable-section\">\n          <h2>Upper</h2>\n          <table cellSpacing=\"0\">\n            <tbody>\n              <RuleRow\n                name=\"Ones\"\n                score={scores.ones}\n                description={ones.description}\n                doScore={evt => doScore(\"ones\", ones.evalRoll)}\n              />\n              <RuleRow\n                name=\"Twos\"\n                score={scores.twos}\n                description={twos.description}\n                doScore={evt => doScore(\"twos\", twos.evalRoll)}\n              />\n              <RuleRow\n                name=\"Threes\"\n                score={scores.threes}\n                description={threes.description}\n                doScore={evt => doScore(\"threes\", threes.evalRoll)}\n              />\n              <RuleRow\n                name=\"Fours\"\n                score={scores.fours}\n                description={fours.description}\n                doScore={evt => doScore(\"fours\", fours.evalRoll)}\n              />\n              <RuleRow\n                name=\"Fives\"\n                score={scores.fives}\n                description={fives.description}\n                doScore={evt => doScore(\"fives\", fives.evalRoll)}\n              />\n              <RuleRow\n                name=\"Sixes\"\n                score={scores.sixes}\n                description={sixes.description}\n                doScore={evt => doScore(\"sixes\", sixes.evalRoll)}\n              />\n            </tbody>\n          </table>\n        </section>\n        <section className=\"ScoreTable-section ScoreTable-section-lower\">\n          <h2>Lower</h2>\n          <table cellSpacing=\"0\">\n            <tbody>\n              <RuleRow\n                name=\"Three of Kind\"\n                score={scores.threeOfKind}\n                description={threeOfKind.description}\n                doScore={evt => doScore(\"threeOfKind\", threeOfKind.evalRoll)}\n              />\n              <RuleRow\n                name=\"Four of Kind\"\n                score={scores.fourOfKind}\n                description={fourOfKind.description}\n                doScore={evt => doScore(\"fourOfKind\", fourOfKind.evalRoll)}\n              />\n              <RuleRow\n                name=\"Full House\"\n                score={scores.fullHouse}\n                description={fullHouse.description}\n                doScore={evt => doScore(\"fullHouse\", fullHouse.evalRoll)}\n              />\n              <RuleRow\n                name=\"Small Straight\"\n                score={scores.smallStraight}\n                description={smallStraight.description}\n                doScore={evt =>\n                  doScore(\"smallStraight\", smallStraight.evalRoll)\n                }\n              />\n              <RuleRow\n                name=\"Large Straight\"\n                score={scores.largeStraight}\n                description={largeStraight.description}\n                doScore={evt =>\n                  doScore(\"largeStraight\", largeStraight.evalRoll)\n                }\n              />\n              <RuleRow\n                name=\"Yahtzee\"\n                score={scores.yahtzee}\n                description={yahtzee.description}\n                doScore={evt => doScore(\"yahtzee\", yahtzee.evalRoll)}\n              />\n              <RuleRow\n                name=\"Chance\"\n                score={scores.chance}\n                description={chance.description}\n                doScore={evt => doScore(\"chance\", chance.evalRoll)}\n              />\n            </tbody>\n          </table>\n        </section>\n        <h2>TOTAL SCORE: {this.getTotalScore()} </h2>\n      </div>\n    );\n  }\n}\n\nexport default ScoreTable;\n","import React, { Component } from \"react\";\nimport Dice from \"./Dice\";\nimport ScoreTable from \"./ScoreTable\";\nimport \"./Game.css\";\n\nconst NUM_DICE = 5;\nconst NUM_ROLLS = 3;\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dice: Array.from({ length: NUM_DICE }),\n      locked: Array(NUM_DICE).fill(false),\n      rollsLeft: NUM_ROLLS,\n      rolling: false,\n      scores: {\n        ones: undefined,\n        twos: undefined,\n        threes: undefined,\n        fours: undefined,\n        fives: undefined,\n        sixes: undefined,\n        threeOfKind: undefined,\n        fourOfKind: undefined,\n        fullHouse: undefined,\n        smallStraight: undefined,\n        largeStraight: undefined,\n        yahtzee: undefined,\n        chance: undefined\n      }\n    };\n    this.roll = this.roll.bind(this);\n    this.doScore = this.doScore.bind(this);\n    this.toggleLocked = this.toggleLocked.bind(this);\n    this.animateRoll = this.animateRoll.bind(this);\n  }\n\n  componentDidMount() {\n    this.animateRoll();\n  }\n\n  animateRoll() {\n    this.setState({ rolling: true }, () => {\n      setTimeout(this.roll, 1000);\n    });\n  }\n\n  roll(evt) {\n    // roll dice whose indexes are in reroll\n    this.setState(st => ({\n      dice: st.dice.map((d, i) =>\n        st.locked[i] ? d : Math.ceil(Math.random() * 6)\n      ),\n      locked: st.rollsLeft > 1 ? st.locked : Array(NUM_DICE).fill(true),\n      rollsLeft: st.rollsLeft - 1,\n      rolling: false\n    }));\n  }\n\n  toggleLocked(idx) {\n    // toggle whether idx is in locked or not\n    if (this.state.rollsLeft > 0 && !this.state.rolling) {\n      this.setState(st => ({\n        locked: [\n          ...st.locked.slice(0, idx),\n          !st.locked[idx],\n          ...st.locked.slice(idx + 1)\n        ]\n      }));\n    }\n  }\n\n  doScore(rulename, ruleFn) {\n    // evaluate this ruleFn with the dice and score this rulename\n    this.setState(st => ({\n      scores: { ...st.scores, [rulename]: ruleFn(this.state.dice) },\n      rollsLeft: NUM_ROLLS,\n      locked: Array(NUM_DICE).fill(false)\n    }));\n    this.animateRoll();\n  }\n\n  displayRollInfo() {\n    const messages = [\n      \"0 Rolls Left\",\n      \"1 Roll Left\",\n      \"2 Rolls Left\",\n      \"Starting Round\"\n    ];\n    return messages[this.state.rollsLeft];\n  }\n\n  render() {\n    return (\n      <div className=\"Game\">\n        <header className=\"Game-header\">\n          <h1 className=\"App-title\">Yahtzee!</h1>\n\n          <section className=\"Game-dice-section\">\n            <Dice\n              dice={this.state.dice}\n              locked={this.state.locked}\n              handleClick={this.toggleLocked}\n              rolling={this.state.rolling}\n            />\n            <div className=\"Game-button-wrapper\">\n              <button\n                className=\"Game-reroll\"\n                disabled={\n                  this.state.locked.every(x => x) ||\n                  this.state.rollsLeft === 0 ||\n                  this.state.rolling\n                }\n                onClick={this.animateRoll}\n              >\n                {this.displayRollInfo()}\n              </button>\n            </div>\n          </section>\n        </header>\n        <ScoreTable doScore={this.doScore} scores={this.state.scores} />\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import React, { Component } from \"react\";\nimport Game from \"./Game\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className='App'>\n        <Game />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}